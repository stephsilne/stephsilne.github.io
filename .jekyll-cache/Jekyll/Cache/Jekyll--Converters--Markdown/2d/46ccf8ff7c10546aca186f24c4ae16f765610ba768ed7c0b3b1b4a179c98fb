I"v<h2 id="ma-544-spring-2021-programming-assignment---4">MA 544 Spring 2021: Programming Assignment - 4</h2>
<hr />

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Import required packages
</span><span class="kn">import</span> <span class="nn">re</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="nn">seaborn</span> <span class="k">as</span> <span class="n">sns</span>
<span class="kn">import</span> <span class="nn">cv2</span>    
<span class="kn">from</span> <span class="nn">sklearn</span> <span class="kn">import</span> <span class="n">decomposition</span>    
<span class="kn">from</span> <span class="nn">scipy.stats</span> <span class="kn">import</span> <span class="n">norm</span>
<span class="kn">from</span> <span class="nn">scipy</span> <span class="kn">import</span> <span class="n">stats</span>  
<span class="kn">from</span> <span class="nn">sklearn.linear_model</span> <span class="kn">import</span> <span class="n">LinearRegression</span>
<span class="kn">from</span> <span class="nn">sklearn.linear_model</span> <span class="kn">import</span> <span class="n">LogisticRegression</span>
<span class="kn">from</span> <span class="nn">sklearn.linear_model</span> <span class="kn">import</span> <span class="n">Ridge</span>
<span class="kn">from</span> <span class="nn">sklearn.model_selection</span> <span class="kn">import</span> <span class="n">train_test_split</span>
<span class="kn">from</span> <span class="nn">sklearn.preprocessing</span> <span class="kn">import</span> <span class="n">MinMaxScaler</span><span class="p">,</span> <span class="n">StandardScaler</span>
<span class="kn">from</span> <span class="nn">sklearn.metrics</span> <span class="kn">import</span> <span class="n">confusion_matrix</span><span class="p">,</span> <span class="n">classification_report</span>
<span class="kn">from</span> <span class="nn">sklearn.decomposition</span> <span class="kn">import</span> <span class="n">PCA</span>

<span class="o">%</span><span class="n">matplotlib</span> <span class="n">inline</span>

</code></pre></div></div>

<h3 id="question-1">Question 1</h3>
<hr />
<p>Find the nonnegative basis representation of images from one of the following databases. Show a comparison of some sample images with their reconstruction from the basis.</p>

<blockquote>
  <ul>
    <li>The ORL database of faces at <a href="http://cam-orl.co.uk/facedatabase.html/#:~:text=Our%20Database%20of%20Faces%2C%20%28formerly%20%27The%20ORL%20Database,Robotics%20Group%20of%20the%20Cambridge%20University%20Engineering%20Department.">ORL link</a>.</li>
  </ul>
</blockquote>

<blockquote>
  <ul>
    <li>The CBCL database of faces at <a href="http://cbcl.mit.edu/software-datasets/heisele/facerecognition-database.html">MIT link</a>.</li>
  </ul>
</blockquote>

<blockquote>
  <ul>
    <li>Yale faces B facial images at <a href="http://vision.ucsd.edu/~leekc/ExtYaleDatabase/ExtYaleB.html">UCSD</a>.</li>
  </ul>
</blockquote>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Your code starts here
</span>
<span class="n">img</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">imread</span><span class="p">(</span><span class="s">'./images/0001_00000001.jpg'</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span>  
<span class="n">vmax</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="n">img</span><span class="p">.</span><span class="nb">max</span><span class="p">(),</span> <span class="o">-</span><span class="n">img</span><span class="p">.</span><span class="nb">min</span><span class="p">())</span>

<span class="n">fig</span><span class="p">,</span> <span class="p">(</span><span class="n">ax</span><span class="p">,</span> <span class="n">ax2</span><span class="p">)</span>  <span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">ncols</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>    
<span class="n">ax</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">gray</span><span class="p">,</span> <span class="n">interpolation</span> <span class="o">=</span> <span class="s">'nearest'</span><span class="p">,</span><span class="n">vmin</span><span class="o">=-</span><span class="n">vmax</span><span class="p">,</span><span class="n">vmax</span><span class="o">=</span><span class="n">vmax</span><span class="p">)</span>

<span class="n">n_components</span> <span class="o">=</span> <span class="mi">20</span>

<span class="n">estimator</span> <span class="o">=</span> <span class="n">decomposition</span><span class="p">.</span><span class="n">NMF</span><span class="p">(</span><span class="n">n_components</span> <span class="o">=</span> <span class="n">n_components</span><span class="p">,</span> <span class="n">init</span> <span class="o">=</span> <span class="s">'random'</span><span class="p">,</span> <span class="n">tol</span><span class="o">=</span><span class="mf">5e-3</span><span class="p">)</span>    
<span class="n">W</span> <span class="o">=</span> <span class="n">estimator</span><span class="p">.</span><span class="n">fit_transform</span><span class="p">(</span><span class="n">img</span><span class="p">)</span>
<span class="n">H</span> <span class="o">=</span> <span class="n">estimator</span><span class="p">.</span><span class="n">components_</span>

<span class="n">new_img</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">dot</span><span class="p">(</span><span class="n">W</span><span class="p">,</span><span class="n">H</span><span class="p">)</span>
<span class="n">ax2</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">new_img</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">gray</span><span class="p">,</span>
                   <span class="n">interpolation</span><span class="o">=</span><span class="s">'nearest'</span><span class="p">,</span>
                   <span class="n">vmin</span><span class="o">=-</span><span class="n">vmax</span><span class="p">,</span> <span class="n">vmax</span><span class="o">=</span><span class="n">vmax</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="output_3_0.png" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Your code starts here
</span>
<span class="n">img</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">imread</span><span class="p">(</span><span class="s">'./images/0003_00000005.jpg'</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span>  
<span class="n">vmax</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="n">img</span><span class="p">.</span><span class="nb">max</span><span class="p">(),</span> <span class="o">-</span><span class="n">img</span><span class="p">.</span><span class="nb">min</span><span class="p">())</span>

<span class="n">fig</span><span class="p">,</span> <span class="p">(</span><span class="n">ax</span><span class="p">,</span> <span class="n">ax2</span><span class="p">)</span>  <span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">ncols</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>    
<span class="n">ax</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">gray</span><span class="p">,</span> <span class="n">interpolation</span> <span class="o">=</span> <span class="s">'nearest'</span><span class="p">,</span><span class="n">vmin</span><span class="o">=-</span><span class="n">vmax</span><span class="p">,</span><span class="n">vmax</span><span class="o">=</span><span class="n">vmax</span><span class="p">)</span>

<span class="n">n_components</span> <span class="o">=</span> <span class="mi">20</span>

<span class="n">estimator</span> <span class="o">=</span> <span class="n">decomposition</span><span class="p">.</span><span class="n">NMF</span><span class="p">(</span><span class="n">n_components</span> <span class="o">=</span> <span class="n">n_components</span><span class="p">,</span> <span class="n">init</span> <span class="o">=</span> <span class="s">'random'</span><span class="p">,</span> <span class="n">tol</span><span class="o">=</span><span class="mf">5e-3</span><span class="p">)</span>    
<span class="n">W</span> <span class="o">=</span> <span class="n">estimator</span><span class="p">.</span><span class="n">fit_transform</span><span class="p">(</span><span class="n">img</span><span class="p">)</span>
<span class="n">H</span> <span class="o">=</span> <span class="n">estimator</span><span class="p">.</span><span class="n">components_</span>

<span class="n">new_img</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">dot</span><span class="p">(</span><span class="n">W</span><span class="p">,</span><span class="n">H</span><span class="p">)</span>
<span class="n">ax2</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">new_img</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">gray</span><span class="p">,</span>
                   <span class="n">interpolation</span><span class="o">=</span><span class="s">'nearest'</span><span class="p">,</span>
                   <span class="n">vmin</span><span class="o">=-</span><span class="n">vmax</span><span class="p">,</span> <span class="n">vmax</span><span class="o">=</span><span class="n">vmax</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="output_4_0.png" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">img</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">imread</span><span class="p">(</span><span class="s">'./images/0004_5.jpg'</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span>  
<span class="n">vmax</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="n">img</span><span class="p">.</span><span class="nb">max</span><span class="p">(),</span> <span class="o">-</span><span class="n">img</span><span class="p">.</span><span class="nb">min</span><span class="p">())</span>

<span class="n">fig</span><span class="p">,</span> <span class="p">(</span><span class="n">ax</span><span class="p">,</span> <span class="n">ax2</span><span class="p">)</span>  <span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">ncols</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>    
<span class="n">ax</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">gray</span><span class="p">,</span> <span class="n">interpolation</span> <span class="o">=</span> <span class="s">'nearest'</span><span class="p">,</span><span class="n">vmin</span><span class="o">=-</span><span class="n">vmax</span><span class="p">,</span><span class="n">vmax</span><span class="o">=</span><span class="n">vmax</span><span class="p">)</span>

<span class="n">n_components</span> <span class="o">=</span> <span class="mi">20</span>

<span class="n">estimator</span> <span class="o">=</span> <span class="n">decomposition</span><span class="p">.</span><span class="n">NMF</span><span class="p">(</span><span class="n">n_components</span> <span class="o">=</span> <span class="n">n_components</span><span class="p">,</span> <span class="n">init</span> <span class="o">=</span> <span class="s">'random'</span><span class="p">,</span> <span class="n">tol</span><span class="o">=</span><span class="mf">5e-3</span><span class="p">)</span>    
<span class="n">W</span> <span class="o">=</span> <span class="n">estimator</span><span class="p">.</span><span class="n">fit_transform</span><span class="p">(</span><span class="n">img</span><span class="p">)</span>
<span class="n">H</span> <span class="o">=</span> <span class="n">estimator</span><span class="p">.</span><span class="n">components_</span>

<span class="n">new_img</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">dot</span><span class="p">(</span><span class="n">W</span><span class="p">,</span><span class="n">H</span><span class="p">)</span>
<span class="n">ax2</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">new_img</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">gray</span><span class="p">,</span>
                   <span class="n">interpolation</span><span class="o">=</span><span class="s">'nearest'</span><span class="p">,</span>
                   <span class="n">vmin</span><span class="o">=-</span><span class="n">vmax</span><span class="p">,</span> <span class="n">vmax</span><span class="o">=</span><span class="n">vmax</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="output_5_0.png" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">img</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">imread</span><span class="p">(</span><span class="s">'./images/0002_7.jpg'</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span>  
<span class="n">vmax</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="n">img</span><span class="p">.</span><span class="nb">max</span><span class="p">(),</span> <span class="o">-</span><span class="n">img</span><span class="p">.</span><span class="nb">min</span><span class="p">())</span>

<span class="n">fig</span><span class="p">,</span> <span class="p">(</span><span class="n">ax</span><span class="p">,</span> <span class="n">ax2</span><span class="p">)</span>  <span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">ncols</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>    
<span class="n">ax</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">gray</span><span class="p">,</span> <span class="n">interpolation</span> <span class="o">=</span> <span class="s">'nearest'</span><span class="p">,</span><span class="n">vmin</span><span class="o">=-</span><span class="n">vmax</span><span class="p">,</span><span class="n">vmax</span><span class="o">=</span><span class="n">vmax</span><span class="p">)</span>

<span class="n">n_components</span> <span class="o">=</span> <span class="mi">20</span>

<span class="n">estimator</span> <span class="o">=</span> <span class="n">decomposition</span><span class="p">.</span><span class="n">NMF</span><span class="p">(</span><span class="n">n_components</span> <span class="o">=</span> <span class="n">n_components</span><span class="p">,</span> <span class="n">init</span> <span class="o">=</span> <span class="s">'random'</span><span class="p">,</span> <span class="n">tol</span><span class="o">=</span><span class="mf">5e-3</span><span class="p">)</span>    
<span class="n">W</span> <span class="o">=</span> <span class="n">estimator</span><span class="p">.</span><span class="n">fit_transform</span><span class="p">(</span><span class="n">img</span><span class="p">)</span>
<span class="n">H</span> <span class="o">=</span> <span class="n">estimator</span><span class="p">.</span><span class="n">components_</span>

<span class="n">new_img</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">dot</span><span class="p">(</span><span class="n">W</span><span class="p">,</span><span class="n">H</span><span class="p">)</span>
<span class="n">ax2</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">new_img</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">gray</span><span class="p">,</span>
                   <span class="n">interpolation</span><span class="o">=</span><span class="s">'nearest'</span><span class="p">,</span>
                   <span class="n">vmin</span><span class="o">=-</span><span class="n">vmax</span><span class="p">,</span> <span class="n">vmax</span><span class="o">=</span><span class="n">vmax</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="output_6_0.png" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">img</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">imread</span><span class="p">(</span><span class="s">'./images/0005_19.jpg'</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span>  
<span class="n">vmax</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="n">img</span><span class="p">.</span><span class="nb">max</span><span class="p">(),</span> <span class="o">-</span><span class="n">img</span><span class="p">.</span><span class="nb">min</span><span class="p">())</span>

<span class="n">fig</span><span class="p">,</span> <span class="p">(</span><span class="n">ax</span><span class="p">,</span> <span class="n">ax2</span><span class="p">)</span>  <span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">ncols</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>    
<span class="n">ax</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">gray</span><span class="p">,</span> <span class="n">interpolation</span> <span class="o">=</span> <span class="s">'nearest'</span><span class="p">,</span><span class="n">vmin</span><span class="o">=-</span><span class="n">vmax</span><span class="p">,</span><span class="n">vmax</span><span class="o">=</span><span class="n">vmax</span><span class="p">)</span>

<span class="n">n_components</span> <span class="o">=</span> <span class="mi">20</span>

<span class="n">estimator</span> <span class="o">=</span> <span class="n">decomposition</span><span class="p">.</span><span class="n">NMF</span><span class="p">(</span><span class="n">n_components</span> <span class="o">=</span> <span class="n">n_components</span><span class="p">,</span> <span class="n">init</span> <span class="o">=</span> <span class="s">'random'</span><span class="p">,</span> <span class="n">tol</span><span class="o">=</span><span class="mf">5e-3</span><span class="p">)</span>    
<span class="n">W</span> <span class="o">=</span> <span class="n">estimator</span><span class="p">.</span><span class="n">fit_transform</span><span class="p">(</span><span class="n">img</span><span class="p">)</span>
<span class="n">H</span> <span class="o">=</span> <span class="n">estimator</span><span class="p">.</span><span class="n">components_</span>

<span class="n">new_img</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">dot</span><span class="p">(</span><span class="n">W</span><span class="p">,</span><span class="n">H</span><span class="p">)</span>
<span class="n">ax2</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">new_img</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">gray</span><span class="p">,</span>
                   <span class="n">interpolation</span><span class="o">=</span><span class="s">'nearest'</span><span class="p">,</span>
                   <span class="n">vmin</span><span class="o">=-</span><span class="n">vmax</span><span class="p">,</span> <span class="n">vmax</span><span class="o">=</span><span class="n">vmax</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="output_7_0.png" alt="png" /></p>

<h3 id="question-2">Question 2</h3>
<hr />
<p>Set up a linear regression model for the miles per gallon on the data at automobile <a href="https://archive.ics.uci.edu/ml/machine-learning-databases/auto-mpg/">UCI</a>.  Discard the categorical data.</p>

<blockquote>
  <ol>
    <li>Analyze the data to get relevant insight.</li>
    <li>Get feature matrix X, and target variable y.</li>
    <li>Split data into training and testing.</li>
    <li>Normalize data using MinMaxScaler.</li>
    <li>Creat a LinearRegression object for modeling.</li>
    <li>Train the model with training data.</li>
    <li>Look at R^2 score for the goodness of fit for the train and test data.</li>
    <li>Present a graphical comparison of true and observed responses for the test data.</li>
    <li>Improve the performance of your model on the test data.</li>
  </ol>
</blockquote>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 1.
</span>
<span class="n">col_names</span> <span class="o">=</span> <span class="p">[</span><span class="s">'mpg'</span><span class="p">,</span> <span class="s">'cylinder'</span><span class="p">,</span> <span class="s">'displ'</span><span class="p">,</span> <span class="s">'hp'</span><span class="p">,</span> <span class="s">'weight'</span><span class="p">,</span> <span class="s">'acc'</span><span class="p">,</span> <span class="s">'mdl_yr'</span><span class="p">,</span> <span class="s">'origin'</span><span class="p">]</span>
<span class="n">df_mpg</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">"./data/auto-mpg.data"</span><span class="p">,</span><span class="n">sep</span> <span class="o">=</span> <span class="s">'\s+'</span><span class="p">,</span><span class="n">usecols</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">8</span><span class="p">)],</span> <span class="n">names</span> <span class="o">=</span> <span class="n">col_names</span><span class="p">)</span>
<span class="n">df_mpg</span><span class="p">.</span><span class="n">info</span><span class="p">()</span>
<span class="n">df_mpg</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 398 entries, 0 to 397
Data columns (total 8 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   mpg       398 non-null    float64
 1   cylinder  398 non-null    int64  
 2   displ     398 non-null    float64
 3   hp        398 non-null    object 
 4   weight    398 non-null    float64
 5   acc       398 non-null    float64
 6   mdl_yr    398 non-null    int64  
 7   origin    398 non-null    int64  
dtypes: float64(4), int64(3), object(1)
memory usage: 25.0+ KB
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>mpg</th>
      <th>cylinder</th>
      <th>displ</th>
      <th>hp</th>
      <th>weight</th>
      <th>acc</th>
      <th>mdl_yr</th>
      <th>origin</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>18.0</td>
      <td>8</td>
      <td>307.0</td>
      <td>130.0</td>
      <td>3504.0</td>
      <td>12.0</td>
      <td>70</td>
      <td>1</td>
    </tr>
    <tr>
      <th>1</th>
      <td>15.0</td>
      <td>8</td>
      <td>350.0</td>
      <td>165.0</td>
      <td>3693.0</td>
      <td>11.5</td>
      <td>70</td>
      <td>1</td>
    </tr>
    <tr>
      <th>2</th>
      <td>18.0</td>
      <td>8</td>
      <td>318.0</td>
      <td>150.0</td>
      <td>3436.0</td>
      <td>11.0</td>
      <td>70</td>
      <td>1</td>
    </tr>
    <tr>
      <th>3</th>
      <td>16.0</td>
      <td>8</td>
      <td>304.0</td>
      <td>150.0</td>
      <td>3433.0</td>
      <td>12.0</td>
      <td>70</td>
      <td>1</td>
    </tr>
    <tr>
      <th>4</th>
      <td>17.0</td>
      <td>8</td>
      <td>302.0</td>
      <td>140.0</td>
      <td>3449.0</td>
      <td>10.5</td>
      <td>70</td>
      <td>1</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_mpg</span><span class="p">.</span><span class="n">shape</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(398, 8)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_mpg</span><span class="p">.</span><span class="n">dtypes</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mpg         float64
cylinder      int64
displ       float64
hp           object
weight      float64
acc         float64
mdl_yr        int64
origin        int64
dtype: object
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_mpg</span><span class="p">.</span><span class="n">describe</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>mpg</th>
      <th>cylinder</th>
      <th>displ</th>
      <th>weight</th>
      <th>acc</th>
      <th>mdl_yr</th>
      <th>origin</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>398.000000</td>
      <td>398.000000</td>
      <td>398.000000</td>
      <td>398.000000</td>
      <td>398.000000</td>
      <td>398.000000</td>
      <td>398.000000</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>23.514573</td>
      <td>5.454774</td>
      <td>193.425879</td>
      <td>2970.424623</td>
      <td>15.568090</td>
      <td>76.010050</td>
      <td>1.572864</td>
    </tr>
    <tr>
      <th>std</th>
      <td>7.815984</td>
      <td>1.701004</td>
      <td>104.269838</td>
      <td>846.841774</td>
      <td>2.757689</td>
      <td>3.697627</td>
      <td>0.802055</td>
    </tr>
    <tr>
      <th>min</th>
      <td>9.000000</td>
      <td>3.000000</td>
      <td>68.000000</td>
      <td>1613.000000</td>
      <td>8.000000</td>
      <td>70.000000</td>
      <td>1.000000</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>17.500000</td>
      <td>4.000000</td>
      <td>104.250000</td>
      <td>2223.750000</td>
      <td>13.825000</td>
      <td>73.000000</td>
      <td>1.000000</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>23.000000</td>
      <td>4.000000</td>
      <td>148.500000</td>
      <td>2803.500000</td>
      <td>15.500000</td>
      <td>76.000000</td>
      <td>1.000000</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>29.000000</td>
      <td>8.000000</td>
      <td>262.000000</td>
      <td>3608.000000</td>
      <td>17.175000</td>
      <td>79.000000</td>
      <td>2.000000</td>
    </tr>
    <tr>
      <th>max</th>
      <td>46.600000</td>
      <td>8.000000</td>
      <td>455.000000</td>
      <td>5140.000000</td>
      <td>24.800000</td>
      <td>82.000000</td>
      <td>3.000000</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_mpg</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">any</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mpg         False
cylinder    False
displ       False
hp          False
weight      False
acc         False
mdl_yr      False
origin      False
dtype: bool
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_mpg</span> <span class="o">=</span> <span class="n">df_mpg</span><span class="p">.</span><span class="n">applymap</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">np</span><span class="p">.</span><span class="n">nan</span> <span class="k">if</span> <span class="n">x</span> <span class="o">==</span> <span class="s">'?'</span> <span class="k">else</span> <span class="n">x</span><span class="p">).</span><span class="n">dropna</span><span class="p">()</span>

<span class="n">df_mpg</span><span class="p">.</span><span class="n">shape</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(392, 8)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">corrmat</span> <span class="o">=</span> <span class="n">df_mpg</span><span class="p">.</span><span class="n">corr</span><span class="p">()</span>
<span class="n">f</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span> <span class="mi">9</span><span class="p">))</span>
<span class="n">sns</span><span class="p">.</span><span class="n">heatmap</span><span class="p">(</span><span class="n">corrmat</span><span class="p">,</span> <span class="n">square</span><span class="o">=</span><span class="bp">True</span><span class="p">);</span>
</code></pre></div></div>

<p><img src="output_15_0.png" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">sns</span><span class="p">.</span><span class="n">displot</span><span class="p">(</span><span class="n">df_mpg</span><span class="p">[</span><span class="s">'mpg'</span><span class="p">])</span>
<span class="n">sns</span><span class="p">.</span><span class="n">displot</span><span class="p">(</span><span class="n">df_mpg</span><span class="p">[</span><span class="s">'displ'</span><span class="p">])</span>
<span class="n">sns</span><span class="p">.</span><span class="n">displot</span><span class="p">(</span><span class="n">df_mpg</span><span class="p">[</span><span class="s">'weight'</span><span class="p">])</span>
<span class="n">sns</span><span class="p">.</span><span class="n">displot</span><span class="p">(</span><span class="n">df_mpg</span><span class="p">[</span><span class="s">'acc'</span><span class="p">])</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;seaborn.axisgrid.FacetGrid at 0x26c0b0e1880&gt;
</code></pre></div></div>

<p><img src="output_16_1.png" alt="png" /></p>

<p><img src="output_16_2.png" alt="png" /></p>

<p><img src="output_16_3.png" alt="png" /></p>

<p><img src="output_16_4.png" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">sns</span><span class="p">.</span><span class="nb">set</span><span class="p">()</span>
<span class="n">sns</span><span class="p">.</span><span class="n">pairplot</span><span class="p">(</span><span class="n">df_mpg</span><span class="p">,</span> <span class="n">height</span> <span class="o">=</span> <span class="mf">2.0</span><span class="p">,</span><span class="n">hue</span> <span class="o">=</span><span class="s">'origin'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="output_17_0.png" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#2.
</span><span class="n">X</span> <span class="o">=</span> <span class="n">df_mpg</span><span class="p">[[</span><span class="s">'cylinder'</span><span class="p">,</span> <span class="s">'displ'</span><span class="p">,</span> <span class="s">'hp'</span><span class="p">,</span> <span class="s">'weight'</span><span class="p">,</span> <span class="s">'acc'</span><span class="p">,</span> <span class="s">'mdl_yr'</span><span class="p">,</span> <span class="s">"origin"</span><span class="p">]]</span>
<span class="n">y</span> <span class="o">=</span> <span class="n">df_mpg</span><span class="p">[</span><span class="s">'mpg'</span><span class="p">]</span>
<span class="c1">#3.
</span><span class="n">X_train</span><span class="p">,</span> <span class="n">X_test</span><span class="p">,</span> <span class="n">y_train</span><span class="p">,</span> <span class="n">y_test</span> <span class="o">=</span> <span class="n">train_test_split</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">train_size</span><span class="o">=</span><span class="mf">0.8</span><span class="p">,</span> <span class="n">test_size</span><span class="o">=</span><span class="mf">0.2</span><span class="p">)</span>
<span class="c1">#4.
</span><span class="n">scaler</span> <span class="o">=</span> <span class="n">MinMaxScaler</span><span class="p">()</span>
<span class="n">scaler</span><span class="p">.</span><span class="n">fit</span><span class="p">(</span><span class="n">X_train</span><span class="p">)</span>
<span class="n">X_train_norm</span> <span class="o">=</span> <span class="n">scaler</span><span class="p">.</span><span class="n">transform</span><span class="p">(</span><span class="n">X_train</span><span class="p">)</span>
<span class="n">X_test_norm</span> <span class="o">=</span> <span class="n">scaler</span><span class="p">.</span><span class="n">transform</span><span class="p">(</span><span class="n">X_test</span><span class="p">)</span>
<span class="c1">#5.
</span><span class="n">lr</span> <span class="o">=</span> <span class="n">LinearRegression</span><span class="p">()</span>
<span class="c1">#6.
</span><span class="n">lr</span><span class="p">.</span><span class="n">fit</span><span class="p">(</span><span class="n">X_train_norm</span><span class="p">,</span> <span class="n">y_train</span><span class="p">)</span>
<span class="c1">#7.
</span><span class="k">print</span><span class="p">(</span><span class="s">"Training set score: {:.2f}"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">lr</span><span class="p">.</span><span class="n">score</span><span class="p">(</span><span class="n">X_train_norm</span><span class="p">,</span> <span class="n">y_train</span><span class="p">)))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Test set score: {:.2f}"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">lr</span><span class="p">.</span><span class="n">score</span><span class="p">(</span><span class="n">X_test_norm</span><span class="p">,</span> <span class="n">y_test</span><span class="p">)))</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Training set score: 0.83
Test set score: 0.79
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#8.
</span><span class="n">y_pred</span> <span class="o">=</span> <span class="n">lr</span><span class="p">.</span><span class="n">predict</span><span class="p">(</span><span class="n">X_test_norm</span><span class="p">)</span>

<span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">()</span>
<span class="n">fig</span><span class="p">.</span><span class="n">set_size_inches</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">y_test</span><span class="p">,</span> <span class="n">y_pred</span><span class="p">,</span> <span class="n">edgecolors</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>
<span class="n">ax</span><span class="p">.</span><span class="n">plot</span><span class="p">([</span><span class="n">y_test</span><span class="p">.</span><span class="nb">min</span><span class="p">(),</span> <span class="n">y_test</span><span class="p">.</span><span class="nb">max</span><span class="p">()],</span> <span class="p">[</span><span class="n">y_test</span><span class="p">.</span><span class="nb">min</span><span class="p">(),</span> <span class="n">y_test</span><span class="p">.</span><span class="nb">max</span><span class="p">()],</span> <span class="s">'k--'</span><span class="p">,</span> <span class="n">lw</span><span class="o">=</span><span class="mi">4</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s">'Measured'</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s">'Predicted'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="output_19_0.png" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#9.
</span><span class="n">ridge10</span> <span class="o">=</span> <span class="n">Ridge</span><span class="p">(</span><span class="n">alpha</span><span class="o">=</span><span class="mi">5</span><span class="p">).</span><span class="n">fit</span><span class="p">(</span><span class="n">X_train_norm</span><span class="p">,</span> <span class="n">y_train</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Training set score: {:.2f}"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">ridge10</span><span class="p">.</span><span class="n">score</span><span class="p">(</span><span class="n">X_train_norm</span><span class="p">,</span> <span class="n">y_train</span><span class="p">)))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Test set score: {:.2f}"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">ridge10</span><span class="p">.</span><span class="n">score</span><span class="p">(</span><span class="n">X_test_norm</span><span class="p">,</span> <span class="n">y_test</span><span class="p">)))</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Training set score: 0.80
Test set score: 0.78
</code></pre></div></div>

<h3 id="question-3">Question 3</h3>
<hr />
<p>Setup a logistic regression model on the data at <a href="http://archive.ics.uci.edu/ml/datasets/Adult">adultUCI</a>.  Discuss the performance of your model using appropriate statistics. Use dummy variables to handle categorical variables.</p>

<blockquote>
  <ol>
    <li>Prepare the data. Create dummy variables for categorical variables. <a href="https://queirozf.com/entries/one-hot-encoding-a-feature-on-a-pandas-dataframe-an-example">See this</a></li>
    <li>Analyze the data to get relevant insight.</li>
    <li>Get feature matrix X, and target variable y (&gt;50k or &lt;50k)</li>
    <li>Split data into training and testing</li>
    <li>Normalize data using MinMaxScaler</li>
    <li>Creat a LogisticRegression object for modeling</li>
    <li>Train the model with training data</li>
    <li>Compare the precision, recall, and F1-score on the train and test data.</li>
    <li>Improve the performance of your model on the test data.</li>
  </ol>
</blockquote>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#1.
</span><span class="n">col_names</span> <span class="o">=</span> <span class="p">[</span><span class="s">'age'</span><span class="p">,</span> <span class="s">'wrkclass'</span><span class="p">,</span> <span class="s">'fnlwgt'</span><span class="p">,</span> <span class="s">'edu'</span><span class="p">,</span> <span class="s">'edu_num'</span><span class="p">,</span> <span class="s">'ms'</span><span class="p">,</span> <span class="s">'occ'</span><span class="p">,</span> <span class="s">'rel'</span><span class="p">,</span> <span class="s">'race'</span><span class="p">,</span> <span class="s">'sex'</span><span class="p">,</span> <span class="s">'cap_gain'</span><span class="p">,</span> <span class="s">'cap_loss'</span><span class="p">,</span> <span class="s">'hrsprwk'</span><span class="p">,</span> <span class="s">'cntry'</span><span class="p">,</span><span class="s">'salary'</span><span class="p">]</span>
<span class="n">df_adlt</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">"./data/adult.data"</span><span class="p">,</span> <span class="n">names</span> <span class="o">=</span> <span class="n">col_names</span><span class="p">)</span>
<span class="n">dummy_df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">get_dummies</span><span class="p">(</span><span class="n">df_adlt</span><span class="p">,</span> <span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">'wrkclass'</span><span class="p">,</span> <span class="s">'edu'</span><span class="p">,</span> <span class="s">'ms'</span><span class="p">,</span> <span class="s">'occ'</span><span class="p">,</span> <span class="s">'rel'</span><span class="p">,</span> <span class="s">'race'</span><span class="p">,</span> <span class="s">'sex'</span><span class="p">,</span> <span class="s">'cntry'</span><span class="p">,</span><span class="s">'salary'</span><span class="p">],</span> <span class="n">drop_first</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
<span class="n">df_adlt</span><span class="p">.</span><span class="n">head</span><span class="p">(</span><span class="mi">7</span><span class="p">)</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>age</th>
      <th>wrkclass</th>
      <th>fnlwgt</th>
      <th>edu</th>
      <th>edu_num</th>
      <th>ms</th>
      <th>occ</th>
      <th>rel</th>
      <th>race</th>
      <th>sex</th>
      <th>cap_gain</th>
      <th>cap_loss</th>
      <th>hrsprwk</th>
      <th>cntry</th>
      <th>salary</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>39</td>
      <td>State-gov</td>
      <td>77516</td>
      <td>Bachelors</td>
      <td>13</td>
      <td>Never-married</td>
      <td>Adm-clerical</td>
      <td>Not-in-family</td>
      <td>White</td>
      <td>Male</td>
      <td>2174</td>
      <td>0</td>
      <td>40</td>
      <td>United-States</td>
      <td>&lt;=50K</td>
    </tr>
    <tr>
      <th>1</th>
      <td>50</td>
      <td>Self-emp-not-inc</td>
      <td>83311</td>
      <td>Bachelors</td>
      <td>13</td>
      <td>Married-civ-spouse</td>
      <td>Exec-managerial</td>
      <td>Husband</td>
      <td>White</td>
      <td>Male</td>
      <td>0</td>
      <td>0</td>
      <td>13</td>
      <td>United-States</td>
      <td>&lt;=50K</td>
    </tr>
    <tr>
      <th>2</th>
      <td>38</td>
      <td>Private</td>
      <td>215646</td>
      <td>HS-grad</td>
      <td>9</td>
      <td>Divorced</td>
      <td>Handlers-cleaners</td>
      <td>Not-in-family</td>
      <td>White</td>
      <td>Male</td>
      <td>0</td>
      <td>0</td>
      <td>40</td>
      <td>United-States</td>
      <td>&lt;=50K</td>
    </tr>
    <tr>
      <th>3</th>
      <td>53</td>
      <td>Private</td>
      <td>234721</td>
      <td>11th</td>
      <td>7</td>
      <td>Married-civ-spouse</td>
      <td>Handlers-cleaners</td>
      <td>Husband</td>
      <td>Black</td>
      <td>Male</td>
      <td>0</td>
      <td>0</td>
      <td>40</td>
      <td>United-States</td>
      <td>&lt;=50K</td>
    </tr>
    <tr>
      <th>4</th>
      <td>28</td>
      <td>Private</td>
      <td>338409</td>
      <td>Bachelors</td>
      <td>13</td>
      <td>Married-civ-spouse</td>
      <td>Prof-specialty</td>
      <td>Wife</td>
      <td>Black</td>
      <td>Female</td>
      <td>0</td>
      <td>0</td>
      <td>40</td>
      <td>Cuba</td>
      <td>&lt;=50K</td>
    </tr>
    <tr>
      <th>5</th>
      <td>37</td>
      <td>Private</td>
      <td>284582</td>
      <td>Masters</td>
      <td>14</td>
      <td>Married-civ-spouse</td>
      <td>Exec-managerial</td>
      <td>Wife</td>
      <td>White</td>
      <td>Female</td>
      <td>0</td>
      <td>0</td>
      <td>40</td>
      <td>United-States</td>
      <td>&lt;=50K</td>
    </tr>
    <tr>
      <th>6</th>
      <td>49</td>
      <td>Private</td>
      <td>160187</td>
      <td>9th</td>
      <td>5</td>
      <td>Married-spouse-absent</td>
      <td>Other-service</td>
      <td>Not-in-family</td>
      <td>Black</td>
      <td>Female</td>
      <td>0</td>
      <td>0</td>
      <td>16</td>
      <td>Jamaica</td>
      <td>&lt;=50K</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">dummy_df</span><span class="p">.</span><span class="n">head</span><span class="p">(</span><span class="mi">7</span><span class="p">)</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>age</th>
      <th>fnlwgt</th>
      <th>edu_num</th>
      <th>cap_gain</th>
      <th>cap_loss</th>
      <th>hrsprwk</th>
      <th>wrkclass_ Federal-gov</th>
      <th>wrkclass_ Local-gov</th>
      <th>wrkclass_ Never-worked</th>
      <th>wrkclass_ Private</th>
      <th>...</th>
      <th>cntry_ Puerto-Rico</th>
      <th>cntry_ Scotland</th>
      <th>cntry_ South</th>
      <th>cntry_ Taiwan</th>
      <th>cntry_ Thailand</th>
      <th>cntry_ Trinadad&amp;Tobago</th>
      <th>cntry_ United-States</th>
      <th>cntry_ Vietnam</th>
      <th>cntry_ Yugoslavia</th>
      <th>salary_ &gt;50K</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>39</td>
      <td>77516</td>
      <td>13</td>
      <td>2174</td>
      <td>0</td>
      <td>40</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>50</td>
      <td>83311</td>
      <td>13</td>
      <td>0</td>
      <td>0</td>
      <td>13</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>38</td>
      <td>215646</td>
      <td>9</td>
      <td>0</td>
      <td>0</td>
      <td>40</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>53</td>
      <td>234721</td>
      <td>7</td>
      <td>0</td>
      <td>0</td>
      <td>40</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>28</td>
      <td>338409</td>
      <td>13</td>
      <td>0</td>
      <td>0</td>
      <td>40</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>37</td>
      <td>284582</td>
      <td>14</td>
      <td>0</td>
      <td>0</td>
      <td>40</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>6</th>
      <td>49</td>
      <td>160187</td>
      <td>5</td>
      <td>0</td>
      <td>0</td>
      <td>16</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
<p>7 rows × 101 columns</p>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">dummy_df</span><span class="p">.</span><span class="n">shape</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(32561, 101)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">dummy_df</span><span class="p">.</span><span class="n">columns</span><span class="p">.</span><span class="n">to_list</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>['age',
 'fnlwgt',
 'edu_num',
 'cap_gain',
 'cap_loss',
 'hrsprwk',
 'wrkclass_ Federal-gov',
 'wrkclass_ Local-gov',
 'wrkclass_ Never-worked',
 'wrkclass_ Private',
 'wrkclass_ Self-emp-inc',
 'wrkclass_ Self-emp-not-inc',
 'wrkclass_ State-gov',
 'wrkclass_ Without-pay',
 'edu_ 11th',
 'edu_ 12th',
 'edu_ 1st-4th',
 'edu_ 5th-6th',
 'edu_ 7th-8th',
 'edu_ 9th',
 'edu_ Assoc-acdm',
 'edu_ Assoc-voc',
 'edu_ Bachelors',
 'edu_ Doctorate',
 'edu_ HS-grad',
 'edu_ Masters',
 'edu_ Preschool',
 'edu_ Prof-school',
 'edu_ Some-college',
 'ms_ Married-AF-spouse',
 'ms_ Married-civ-spouse',
 'ms_ Married-spouse-absent',
 'ms_ Never-married',
 'ms_ Separated',
 'ms_ Widowed',
 'occ_ Adm-clerical',
 'occ_ Armed-Forces',
 'occ_ Craft-repair',
 'occ_ Exec-managerial',
 'occ_ Farming-fishing',
 'occ_ Handlers-cleaners',
 'occ_ Machine-op-inspct',
 'occ_ Other-service',
 'occ_ Priv-house-serv',
 'occ_ Prof-specialty',
 'occ_ Protective-serv',
 'occ_ Sales',
 'occ_ Tech-support',
 'occ_ Transport-moving',
 'rel_ Not-in-family',
 'rel_ Other-relative',
 'rel_ Own-child',
 'rel_ Unmarried',
 'rel_ Wife',
 'race_ Asian-Pac-Islander',
 'race_ Black',
 'race_ Other',
 'race_ White',
 'sex_ Male',
 'cntry_ Cambodia',
 'cntry_ Canada',
 'cntry_ China',
 'cntry_ Columbia',
 'cntry_ Cuba',
 'cntry_ Dominican-Republic',
 'cntry_ Ecuador',
 'cntry_ El-Salvador',
 'cntry_ England',
 'cntry_ France',
 'cntry_ Germany',
 'cntry_ Greece',
 'cntry_ Guatemala',
 'cntry_ Haiti',
 'cntry_ Holand-Netherlands',
 'cntry_ Honduras',
 'cntry_ Hong',
 'cntry_ Hungary',
 'cntry_ India',
 'cntry_ Iran',
 'cntry_ Ireland',
 'cntry_ Italy',
 'cntry_ Jamaica',
 'cntry_ Japan',
 'cntry_ Laos',
 'cntry_ Mexico',
 'cntry_ Nicaragua',
 'cntry_ Outlying-US(Guam-USVI-etc)',
 'cntry_ Peru',
 'cntry_ Philippines',
 'cntry_ Poland',
 'cntry_ Portugal',
 'cntry_ Puerto-Rico',
 'cntry_ Scotland',
 'cntry_ South',
 'cntry_ Taiwan',
 'cntry_ Thailand',
 'cntry_ Trinadad&amp;Tobago',
 'cntry_ United-States',
 'cntry_ Vietnam',
 'cntry_ Yugoslavia',
 'salary_ &gt;50K']
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">dummy_df</span><span class="p">.</span><span class="n">describe</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>age</th>
      <th>fnlwgt</th>
      <th>edu_num</th>
      <th>cap_gain</th>
      <th>cap_loss</th>
      <th>hrsprwk</th>
      <th>wrkclass_ Federal-gov</th>
      <th>wrkclass_ Local-gov</th>
      <th>wrkclass_ Never-worked</th>
      <th>wrkclass_ Private</th>
      <th>...</th>
      <th>cntry_ Puerto-Rico</th>
      <th>cntry_ Scotland</th>
      <th>cntry_ South</th>
      <th>cntry_ Taiwan</th>
      <th>cntry_ Thailand</th>
      <th>cntry_ Trinadad&amp;Tobago</th>
      <th>cntry_ United-States</th>
      <th>cntry_ Vietnam</th>
      <th>cntry_ Yugoslavia</th>
      <th>salary_ &gt;50K</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>32561.000000</td>
      <td>3.256100e+04</td>
      <td>32561.000000</td>
      <td>32561.000000</td>
      <td>32561.000000</td>
      <td>32561.000000</td>
      <td>32561.000000</td>
      <td>32561.000000</td>
      <td>32561.000000</td>
      <td>32561.000000</td>
      <td>...</td>
      <td>32561.000000</td>
      <td>32561.000000</td>
      <td>32561.000000</td>
      <td>32561.000000</td>
      <td>32561.000000</td>
      <td>32561.000000</td>
      <td>32561.000000</td>
      <td>32561.000000</td>
      <td>32561.000000</td>
      <td>32561.000000</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>38.581647</td>
      <td>1.897784e+05</td>
      <td>10.080679</td>
      <td>1077.648844</td>
      <td>87.303830</td>
      <td>40.437456</td>
      <td>0.029483</td>
      <td>0.064279</td>
      <td>0.000215</td>
      <td>0.697030</td>
      <td>...</td>
      <td>0.003501</td>
      <td>0.000369</td>
      <td>0.002457</td>
      <td>0.001566</td>
      <td>0.000553</td>
      <td>0.000584</td>
      <td>0.895857</td>
      <td>0.002058</td>
      <td>0.000491</td>
      <td>0.240810</td>
    </tr>
    <tr>
      <th>std</th>
      <td>13.640433</td>
      <td>1.055500e+05</td>
      <td>2.572720</td>
      <td>7385.292085</td>
      <td>402.960219</td>
      <td>12.347429</td>
      <td>0.169159</td>
      <td>0.245254</td>
      <td>0.014661</td>
      <td>0.459549</td>
      <td>...</td>
      <td>0.059068</td>
      <td>0.019194</td>
      <td>0.049507</td>
      <td>0.039546</td>
      <td>0.023506</td>
      <td>0.024149</td>
      <td>0.305451</td>
      <td>0.045316</td>
      <td>0.022162</td>
      <td>0.427581</td>
    </tr>
    <tr>
      <th>min</th>
      <td>17.000000</td>
      <td>1.228500e+04</td>
      <td>1.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>1.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>...</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>28.000000</td>
      <td>1.178270e+05</td>
      <td>9.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>40.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>...</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>1.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>37.000000</td>
      <td>1.783560e+05</td>
      <td>10.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>40.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>1.000000</td>
      <td>...</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>1.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>48.000000</td>
      <td>2.370510e+05</td>
      <td>12.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>45.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>1.000000</td>
      <td>...</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>1.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
    </tr>
    <tr>
      <th>max</th>
      <td>90.000000</td>
      <td>1.484705e+06</td>
      <td>16.000000</td>
      <td>99999.000000</td>
      <td>4356.000000</td>
      <td>99.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>...</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
      <td>1.000000</td>
    </tr>
  </tbody>
</table>
<p>8 rows × 101 columns</p>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#3.
</span><span class="n">X</span> <span class="o">=</span> <span class="n">dummy_df</span><span class="p">.</span><span class="n">drop</span><span class="p">([</span><span class="s">'salary_ &gt;50K'</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">y</span> <span class="o">=</span> <span class="n">dummy_df</span><span class="p">[</span><span class="s">'salary_ &gt;50K'</span><span class="p">]</span>
<span class="c1">#4.
</span><span class="n">X_train</span><span class="p">,</span> <span class="n">X_test</span><span class="p">,</span> <span class="n">y_train</span><span class="p">,</span> <span class="n">y_test</span>  <span class="o">=</span> <span class="n">train_test_split</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">test_size</span><span class="o">=</span><span class="mf">0.3</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>

<span class="c1">#5.
</span><span class="n">scaler</span> <span class="o">=</span> <span class="n">MinMaxScaler</span><span class="p">()</span>
<span class="n">scaler</span><span class="p">.</span><span class="n">fit</span><span class="p">(</span><span class="n">X_train</span><span class="p">)</span>
<span class="n">X_train_n</span> <span class="o">=</span> <span class="n">scaler</span><span class="p">.</span><span class="n">transform</span><span class="p">(</span><span class="n">X_train</span><span class="p">)</span>
<span class="n">X_test_n</span> <span class="o">=</span> <span class="n">scaler</span><span class="p">.</span><span class="n">transform</span><span class="p">(</span><span class="n">X_test</span><span class="p">)</span>

<span class="c1">#6.
</span><span class="n">lrc</span> <span class="o">=</span> <span class="n">LogisticRegression</span><span class="p">(</span><span class="n">C</span><span class="o">=</span><span class="mf">30.0</span><span class="p">,</span> <span class="n">max_iter</span><span class="o">=</span><span class="mi">1000</span><span class="p">)</span>

<span class="c1">#7.
</span><span class="n">lrc</span><span class="p">.</span><span class="n">fit</span><span class="p">(</span><span class="n">X_train_n</span><span class="p">,</span> <span class="n">y_train</span><span class="p">)</span>
<span class="c1">#8.
</span><span class="n">y_pred</span> <span class="o">=</span> <span class="n">lrc</span><span class="p">.</span><span class="n">predict</span><span class="p">(</span><span class="n">X_test_n</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span> <span class="s">"Confusion Matrix:</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span><span class="n">confusion_matrix</span><span class="p">(</span><span class="n">y_test</span><span class="p">,</span> <span class="n">y_pred</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span> <span class="s">"</span><span class="se">\n</span><span class="s"> Classification Report:</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">classification_report</span><span class="p">(</span><span class="n">y_test</span><span class="p">,</span> <span class="n">lrc</span><span class="p">.</span><span class="n">predict</span><span class="p">(</span><span class="n">X_test_n</span><span class="p">),</span> <span class="n">digits</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Confusion Matrix:
 [[6920  508]
 [ 928 1413]]

 Classification Report:
               precision    recall  f1-score   support

           0       0.88      0.93      0.91      7428
           1       0.74      0.60      0.66      2341

    accuracy                           0.85      9769
   macro avg       0.81      0.77      0.78      9769
weighted avg       0.85      0.85      0.85      9769
</code></pre></div></div>

:ET